## 项目名称
AI辅助教学App（液压教学）

## 开发目标
创建一个专注于AI辅助教学的手机App，主要面向液压教学领域，通过嵌入Dify的智能体API，提供智能问答、知识点讲解等功能，帮助学生更好地学习液压相关知识。

## 技术要求
1. 使用Flutter框架开发，支持Android平台
2. 基于Dart语言实现App功能
3. 集成Dify的智能体API，实现智能教学功能
4. 界面设计简洁直观，方便用户操作
5. 优化App性能，确保流畅运行

## 功能需求
1. **AI智能问答**：用户可以通过输入问题，获取液压教学相关的智能回答
2. **知识点讲解**：提供液压教学的详细知识点讲解，支持图文并茂的形式
3. **智能体管理**：展示已创建的液压教学智能体，支持切换和管理
4. **学习进度跟踪**：记录用户的学习进度，提供学习建议和提醒
5. **离线功能**：支持部分内容的离线访问，方便用户在无网络情况下学习

## 界面设计
1. **顶部搜索框**：用户输入问题或关键词进行搜索
2. **智能体列表**：展示已创建的液压教学智能体，支持点击进入详细页面
3. **功能按钮**：包括“AI问答”、“知识点”、“学习进度”等功能入口
4. **底部导航栏**：包括“首页”、“AI工具”、“个人中心”等导航选项

## API集成
1. 使用Dify的智能体API，实现智能教学功能
2. 调用API地址：`http://127.0.0.1/app/3f969086-2585-4027-ba68-65deb3ff7163/develop`
3. 根据用户输入的问题，调用API获取智能回答
4. 处理API返回的数据，展示在App界面上

## 开发步骤
1. 创建Flutter项目，设置项目的基本结构和依赖
2. 设计App界面，参考上传的图片进行布局，适配Android平台
3. 实现搜索功能，调用Dify的智能体API获取搜索结果
4. 展示智能体列表，支持点击查看详情和管理智能体
5. 集成AI智能问答功能，调用API实现问答功能
6. 实现知识点讲解功能，支持图文展示
7. 添加学习进度跟踪功能，记录用户学习情况
8. 测试App功能，确保各项功能正常运行
9. 优化App性能，提升用户体验
10. 发布App，将App打包并发布到Android应用市场

## 注意事项
1. 确保API调用的正确性，处理可能出现的网络错误
2. 优化界面布局，适配不同屏幕尺寸的Android设备
3. 提供良好的用户反馈机制，提升用户满意度
4. 合理管理资源，避免内存泄漏和性能问题
5. 确保App的安全性，保护用户数据和隐私